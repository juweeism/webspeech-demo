---

---

<div>
	<div style="margin: 0 auto; max-width: 700px;">
		<button class="record" onclick="toggleStartStop()">record</button>
		<p id="hello">
			<span id="final_span"></span>
			<span id="interim_span" style="color: gray;"></span>
			<b><span id="speech_continuation_span" style="color: green;"></span></b>
		</p>
	</div>
</div>


<script type="text/javascript" is:inline>

	const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
	const recordButton = document.querySelector('button.record');

	let recognizing = false;
	let recognition = new SpeechRecognition();
	recognition.continuous = true;
	reset();
	recognition.onend = () => {
		console.log('Speech recognition service disconnected');
		reset()
	};
	recognition.interimResults = true;

// 
	// recordButton.forEach((button) => {
	// 	button.addEventListener('click', () => {
	// 		toggleStartStop()
	// 	});
	// });
// 
	recognition.onresult = function (event) {
		// for (var i = event.resultIndex; i < event.results.length; ++i) {
		// 		textarea.value += event.results[i][0].transcript;
		// }
		// try {
		// 	if (event.results.length > 0) {
		// 		alert('on result if')
		// 	}
		// } catch (error) {
		// 	alert(error)
		// }
		// var final = "";
		// var interim = "";
		
		recognition.onresult = function (event) {
			var final = "";
			var interim = "";

			for (var i = 0; i < event.results.length; ++i) {
				if (event.results[i].isFinal) {
					final += event.results[i][0].transcript;
				} else {
					interim += event.results[i][0].transcript;
				}
			}

			final_span.innerHTML = final;
			interim_span.innerHTML = interim;

			console.log(hello.innerText)
		}
	}

	
	async function getSpeechSuggestion() {
	    const speechData = {
        	excerpt: final_span.innerHTML,
			previous_suggestion: speech_continuation_span.innerHTML
    	};
		if(speechData.excerpt == null || speechData.excerpt == ""){
			console.log("You haven't started speaking.");
			return;
		}
		console.log("Sending request now...",speechData.excerpt);
    	try {
        	const response = await fetch('http://192.168.0.23:8080/generate_speech', {
            	method: 'POST',
            	headers: {
                	'Content-Type': 'application/json',
            	},
            	body: JSON.stringify(speechData),
        	});

        	const data = await response.json();
        	console.log('Response:', data);
			console.log('Keys:', Object.keys(data));
			speech_continuation_span.innerHTML = JSON.parse(data).next_sentence;
        	//return data["next_sentences"];
    	} catch (error) {
        	console.error('Error:', error);
        		// Handle errors
    	}
	}

	async function updateGeneratedSpeech() {
    	try {
        	let suggestion = await getSpeechSuggestion();
        	console.log("suggestion: ", suggestion);
        	speech_continuation_span.innerHTML = suggestion;
    	} catch (error) {
        	console.error('Error updating generated speech:', error);
    	}
	}

	setInterval(getSpeechSuggestion, 10000);

	function reset() {
		recognizing = false;
		recordButton.innerHTML = "Click to Speak";
	}

	function toggleStartStop() {
		if (recognizing) {
			recognition.stop();
			reset();
		} else {
			try {
				recognition.start();
				recognizing = true;
				recordButton.innerHTML = "Click to Stop";
			} catch (err) {
				alert(err.message)
			}
		}
	}

</script>